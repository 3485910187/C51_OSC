C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN .\Objects\12864.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\128
                    -64.lst) TABS(2) OBJECT(.\Objects\12864.obj)

line level    source

   1          #include "12864.h"
   2          
   3          /********************************************************************
   4          功    能：定义字库：Hzk-汉字库，Szk-数字库，Fhk-符号库，Zmk-字母库
   5          参    数：无
   6          返回值  ：无
   7          使用方法：根据需要自备
   8          *********************************************************************/
   9          uchar code Hzk[]={
  10          /*--  文字:  ℃  --*/
  11          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  12          0x06,0x09,0x09,0xE6,0xF8,0x0C,0x04,0x02,0x02,0x02,0x02,0x02,0x04,0x1E,0x00,0x00,
  13          0x00,0x00,0x00,0x07,0x1F,0x30,0x20,0x40,0x40,0x40,0x40,0x40,0x20,0x10,0x00,0x00,
  14          };
  15          uchar code Szk[]={
  16          /*--  文字:  0  --*/
  17          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  18          0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,
  19          
  20          /*--  文字:  1  --*/
  21          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  22          0x00,0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,
  23          
  24          /*--  文字:  2  --*/
  25          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  26          0x00,0x70,0x08,0x08,0x08,0x08,0xF0,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,
  27          
  28          /*--  文字:  3  --*/
  29          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  30          0x00,0x30,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x18,0x20,0x21,0x21,0x22,0x1C,0x00,
  31          
  32          /*--  文字:  4  --*/
  33          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  34          0x00,0x00,0x80,0x40,0x30,0xF8,0x00,0x00,0x00,0x06,0x05,0x24,0x24,0x3F,0x24,0x24,
  35          
  36          /*--  文字:  5  --*/
  37          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  38          0x00,0xF8,0x88,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x20,0x20,0x20,0x11,0x0E,0x00,
  39          
  40          /*--  文字:  6  --*/
  41          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  42          0x00,0xE0,0x10,0x88,0x88,0x90,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x20,0x1F,0x00,
  43          
  44          /*--  文字:  7  --*/
  45          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  46          0x00,0x18,0x08,0x08,0x88,0x68,0x18,0x00,0x00,0x00,0x00,0x3E,0x01,0x00,0x00,0x00,
  47          
  48          /*--  文字:  8  --*/
  49          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  50          0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,
  51          
  52          /*--  文字:  9  --*/
  53          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  54          0x00,0xF0,0x08,0x08,0x08,0x10,0xE0,0x00,0x00,0x01,0x12,0x22,0x22,0x11,0x0F,0x00,
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 2   

  55          
  56          /*--  文字:  -  --*/
  57          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  58          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00,
  59          };
  60          
  61          uchar code Fhk[]={
  62          /*--  文字:    --*/
  63          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  64          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  65            
  66          /*--  文字:  +  --*/
  67          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  68          0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x0F,0x01,0x01,0x01,
  69          
  70          /*--  文字:  -  --*/
  71          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  72          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00,
  73          
  74          /*--  文字:  *  --*/
  75          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  76          0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,
  77          
  78          /*--  文字:  /  --*/
  79          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  80          0x00,0x00,0x00,0x00,0xC0,0x38,0x04,0x00,0x00,0x60,0x18,0x07,0x00,0x00,0x00,0x00,
  81          
  82          /*--  文字:  ：  --*/
  83          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  84          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x36,0x36,0x00,0x00,0x00,0x00,
  85          
  86          /*--  文字:  ？  --*/
  87          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  88          0x00,0x00,0x38,0x34,0x02,0x82,0xC2,0x7C,0x00,0x00,0x00,0x00,0x00,0x37,0x37,0x00,
  89          
  90          /*--  文字:  ~  --*/
  91          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  92          0x00,0x02,0x01,0x02,0x02,0x04,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  93          
  94          /*--  文字:  %  --*/
  95          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  96          0xF0,0x08,0xF0,0x80,0x60,0x18,0x00,0x00,0x00,0x31,0x0C,0x03,0x1E,0x21,0x1E,0x00,
  97          
  98          /*--  文字:  #  --*/
  99          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 100          0x00,0x40,0xC0,0x78,0x40,0xC0,0x78,0x00,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x00,
 101          
 102          /*--  文字:  <  --*/
 103          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 104          0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,
 105          
 106          /*--  文字:  >  --*/
 107          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 108          0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,
 109          
 110          /*--  文字:  .  --*/
 111          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 112          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,
 113          };
 114          
 115          uchar code Zmk[]={
 116          /*--  文字:  A  --*/
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 3   

 117          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 118          0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,
 119          
 120          /*--  文字:  B  --*/
 121          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 122          0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,
 123          
 124          /*--  文字:  C  --*/
 125          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 126          0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,
 127          
 128          /*--  文字:  D  --*/
 129          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 130          0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,
 131          
 132          /*--  文字:  E  --*/
 133          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 134          0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,
 135          
 136          /*--  文字:  F  --*/
 137          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 138          0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,
 139          
 140          /*--  文字:  G  --*/
 141          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 142          0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,
 143          
 144          /*--  文字:  H  --*/
 145          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 146          0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,
 147          
 148          /*--  文字:  I  --*/
 149          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 150          0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
 151          
 152          /*--  文字:  J  --*/
 153          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 154          0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,
 155          
 156          /*--  文字:  K  --*/
 157          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 158          0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,
 159          
 160          /*--  文字:  L  --*/
 161          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 162          0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,
 163          
 164          /*--  文字:  M  --*/
 165          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 166          0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x01,0x3E,0x01,0x3F,0x20,0x00,
 167          
 168          /*--  文字:  N  --*/
 169          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 170          0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,
 171          
 172          /*--  文字:  O  --*/
 173          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 174          0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,
 175          
 176          /*--  文字:  P  --*/
 177          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 178          0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 4   

 179          
 180          /*--  文字:  Q  --*/
 181          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 182          0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x28,0x28,0x30,0x50,0x4F,0x00,
 183          
 184          /*--  文字:  R  --*/
 185          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 186          0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,
 187          
 188          /*--  文字:  S  --*/
 189          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 190          0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,
 191          
 192          /*--  文字:  T  --*/
 193          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 194          0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,
 195          
 196          /*--  文字:  U  --*/
 197          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 198          0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,
 199          
 200          /*--  文字:  V  --*/
 201          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 202          0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,
 203          
 204          /*--  文字:  W  --*/
 205          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 206          0x08,0xF8,0x00,0xF8,0x00,0xF8,0x08,0x00,0x00,0x03,0x3E,0x01,0x3E,0x03,0x00,0x00,
 207          
 208          /*--  文字:  X  --*/
 209          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 210          0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,
 211          
 212          /*--  文字:  Y  --*/
 213          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 214          0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,
 215          
 216          /*--  文字:  Z  --*/
 217          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 218          0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,
 219          
 220          /*--  文字:  a  --*/
 221          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 222          0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x19,0x24,0x24,0x12,0x3F,0x20,0x00,
 223          
 224          /*--  文字:  b  --*/
 225          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 226          0x10,0xF0,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,
 227          
 228          /*--  文字:  c  --*/
 229          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 230          0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,
 231          
 232          /*--  文字:  d  --*/
 233          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 234          0x00,0x00,0x80,0x80,0x80,0x90,0xF0,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,
 235          
 236          /*--  文字:  e  --*/
 237          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 238          0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x24,0x24,0x24,0x24,0x17,0x00,
 239          
 240          /*--  文字:  f  --*/
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 5   

 241          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 242          0x00,0x80,0x80,0xE0,0x90,0x90,0x20,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
 243          
 244          /*--  文字:  g  --*/
 245          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 246          0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,
 247          
 248          /*--  文字:  h  --*/
 249          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 250          0x10,0xF0,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,
 251          
 252          /*--  文字:  i  --*/
 253          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 254          0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
 255          
 256          /*--  文字:  j  --*/
 257          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 258          0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,
 259          
 260          /*--  文字:  k  --*/
 261          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 262          0x10,0xF0,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x06,0x29,0x30,0x20,0x00,
 263          
 264          /*--  文字:  l  --*/
 265          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 266          0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
 267          
 268          /*--  文字:  m  --*/
 269          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 270          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,
 271          
 272          /*--  文字:  n  --*/
 273          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 274          0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,
 275          
 276          /*--  文字:  o  --*/
 277          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 278          0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,
 279          
 280          /*--  文字:  p  --*/
 281          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 282          0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0x91,0x20,0x20,0x11,0x0E,0x00,
 283          
 284          /*--  文字:  q  --*/
 285          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 286          0x00,0x00,0x00,0x80,0x80,0x00,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0x91,0xFF,0x80,
 287          
 288          /*--  文字:  r  --*/
 289          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 290          0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,
 291          
 292          /*--  文字:  s  --*/
 293          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 294          0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,
 295          
 296          /*--  文字:  t  --*/
 297          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 298          0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x10,0x00,
 299          
 300          /*--  文字:  u  --*/
 301          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 302          0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 6   

 303          
 304          /*--  文字:  v  --*/
 305          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 306          0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x03,0x0C,0x30,0x0C,0x03,0x00,0x00,
 307          
 308          /*--  文字:  w  --*/
 309          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 310          0x80,0x80,0x00,0x80,0x80,0x00,0x80,0x80,0x01,0x0E,0x30,0x0C,0x07,0x38,0x06,0x01,
 311          
 312          /*--  文字:  x  --*/
 313          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 314          0x00,0x80,0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x20,0x31,0x0E,0x2E,0x31,0x20,0x00,
 315          
 316          /*--  文字:  y  --*/
 317          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 318          0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x81,0x86,0x78,0x18,0x06,0x01,0x00,
 319          
 320          /*--  文字:  z  --*/
 321          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 322          0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,
 323          };
 324          
 325          uchar code Zmk_6x8[]={
 326          0x00,0x7C,0x44,0x44,0x7C,0x00,/*"0",0*/
 327          
 328          0x00,0x00,0x04,0x7C,0x00,0x00,/*"1",1*/
 329          
 330          0x00,0x6C,0x64,0x54,0x4C,0x00,/*"2",2*/
 331          
 332          0x00,0x44,0x54,0x54,0x7C,0x00,/*"3",3*/
 333          
 334          0x20,0x30,0x28,0x24,0x7C,0x00,/*"4",4*/
 335          
 336          0x00,0x5C,0x54,0x54,0x74,0x00,/*"5",5*/
 337          
 338          0x00,0x7C,0x54,0x54,0x74,0x00,/*"6",6*/
 339          
 340          0x00,0x04,0x74,0x0C,0x04,0x00,/*"7",7*/
 341          
 342          0x00,0x7C,0x54,0x54,0x7C,0x00,/*"8",8*/
 343          
 344          0x00,0x5C,0x54,0x54,0x7C,0x00,/*"9",9*/
 345          
 346          0x7C,0x0C,0x70,0x0C,0x7C,0x00,/*"M",10*/
 347          
 348          0x40,0x70,0x2C,0x38,0x60,0x00,/*"A",11*/
 349          
 350          0x44,0x6C,0x10,0x6C,0x44,0x00,/*"X",12*/
 351          
 352          0x44,0x44,0x7C,0x44,0x44,0x00,/*"I",13*/
 353          
 354          0x44,0x7C,0x50,0x24,0x7C,0x04,/*"N",14*/
 355          
 356          0x00,0x7C,0x10,0x10,0x7C,0x00,/*"H",15*/
 357          
 358          0x44,0x64,0x54,0x4C,0x44,0x00,/*"Z",16*/
 359          
 360          0x04,0x7C,0x60,0x14,0x0C,0x04,/*"V",17*/
 361          };
 362          
 363          /********************************************************************
 364          函数名称：CheckState
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 7   

 365          功    能：状态检查，LCD判忙，RS=0写指令，RS=1写数据
 366          参    数：无
 367          返回值  ：无
 368          *********************************************************************/
 369          void CheckState(void)
 370          {
 371   1         uchar dat; //状态信息，判忙
 372   1         RS=0;      //DB7∽DB0为显示指令数据 
 373   1         RW=1;      //数据被读到DB7∽DB0 
 374   1         do{
 375   2            DATA=0x00;
 376   2            EN=1; //EN下降沿
 377   2            dat=DATA;
 378   2            EN=0;
 379   2            dat=0x80 & dat; //DB7为0可操作
 380   2          }while(!(dat==0x00));
 381   1      }
 382          
 383          /********************************************************************
 384          函数名称：SendCommandToLCD
 385          功    能：写命令到LCD，RS=0写指令，RS=1写数据
 386          参    数：com 命令
 387          返回值  ：无
 388          *********************************************************************/
 389          void SendCommandToLCD(uchar com)
 390          {
 391   1         CheckState();//状态检查
 392   1         RS=0;        //向LCD发送命令
 393   1         RW=0;
 394   1         DATA=com;   
 395   1         EN=1;        //EN下降沿
 396   1         EN=0;
 397   1      }
 398          
 399          /********************************************************************
 400          函数名称：SetLine
 401          功    能：设置行（页）
 402          说    明：0xb8是页的首地址，1011 1xxx  设定页地址--xxx,8行=1页，共8页
 403          参    数：page，取值0-7
 404          返回值  ：无
 405          使用方法：必要时使用
 406          *********************************************************************/
 407          void SetLine(uchar page)  
 408          {
 409   1        page=0xb8|page; 
 410   1        SendCommandToLCD(page);
 411   1      }
 412          /********************************************************************
 413          函数名称：SetStartLine
 414          功    能：设置从哪行开始：0-63，一般从0 行开始显示
 415          说    明：0xc0是行的首地址
 416          参    数：startline，取值0-63
 417          返回值  ：无
 418          使用方法：必要时使用
 419          *********************************************************************/
 420          void SetStartLine(uchar startline)     
 421          {
 422   1        startline=0xc0|startline; 
 423   1        SendCommandToLCD(startline); 
 424   1      }
 425          /********************************************************************
 426          函数名称：SetColumn
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 8   

 427          功    能：设置从哪列开始：0-63
 428          说    明：0x40是列的首地址，column最大值为63，越出在0-63间循环 
 429          参    数：column，取值0-63
 430          返回值  ：无
 431          *********************************************************************/
 432          void SetColumn(uchar column)  
 433          {
 434   1         column=column &0x3f; //只取低6位
 435   1         column= 0x40|column; //01xx xxxx
 436   1         SendCommandToLCD(column);
 437   1      }
 438          /********************************************************************
 439          函数名称：SetOnOff
 440          功    能：开关显示
 441          说    明：0x3f是开显示，0x3e是关显示 
 442          参    数：onoff：0-关、1-开
 443          返回值  ：无
 444          使用方法：必要时使用
 445          *********************************************************************/
 446          void SetOnOff(uchar onoff)     
 447          {
 448   1         onoff=0x3e|onoff; //0011 111x
 449   1         SendCommandToLCD(onoff);
 450   1      }
 451          /********************************************************************
 452          函数名称：WriteByte
 453          功    能：写显示数据，RS=0写指令，RS=1写数据，列地址自动加1
 454          参    数：dat：按字节显示数据
 455          返回值  ：无
 456          *********************************************************************/
 457          void WriteByte(uchar dat) 
 458          {
 459   1         CheckState();//状态检查
 460   1         RS=1; 
 461   1         RW=0;
 462   1         DATA=dat;
 463   1         EN=1; //EN下降沿
 464   1         EN=0;
 465   1      }
 466          /********************************************************************
 467          函数名称：SelectScreen
 468          功    能：选择屏幕
 469          参    数：screen: 0-全屏,1-左屏,2-右屏
 470          返回值  ：无
 471          使用方法：初始化3或必要时使用
 472          *********************************************************************/
 473          void SelectScreen(uchar screen)   
 474          {
 475   1        switch(screen)
 476   1        {
 477   2          case 0: cs1=0;cs2=0;break; //全屏
 478   2          case 2: cs1=1;cs2=0;break;//左屏    
 479   2          case 1: cs1=0;cs2=1; break;//右屏   
 480   2        }
 481   1      }
 482          /********************************************************************
 483          函数名称：ClearScreen
 484          功    能：清屏
 485          参    数：screen: 0-全屏,1-左屏,2-右屏
 486          返回值  ：无
 487          使用方法：初始化2或必要时使用
 488          *********************************************************************/
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 9   

 489          void ClearScreen(uchar screen)    
 490          {
 491   1         uchar i,j;
 492   1         SelectScreen(screen);
 493   1         for(i=0;i<8;i++)     //页
 494   1         {
 495   2           SetLine(i);
 496   2           SetColumn(0);
 497   2           for(j=0;j<64;j++)  //列
 498   2           {WriteByte(0x00);} //写
 499   2         }
 500   1      }
 501          
 502          /********************************************************************
 503          函数名称：InitLCD
 504          功    能：初始化LCD
 505          参    数：无
 506          返回值  ：无
 507          使用方法：初始化1
 508          *********************************************************************/
 509          void InitLCD()    
 510          {
 511   1         CheckState();//状态检查
 512   1         SelectScreen(0);
 513   1         SetOnOff(0); //关显示
 514   1         SelectScreen(0);
 515   1         SetOnOff(1); //开显示
 516   1         SelectScreen(0);
 517   1         ClearScreen(0);//清屏
 518   1         SetStartLine(0); //开始行:0
 519   1      }
 520          /********************************************************************
 521          函数名称：Display_HZ
 522          功    能：显示全角汉字
 523          参    数：screen-选择屏幕: 0-全屏,1-左屏,2-右屏
 524                    page-选页参数，每次写一页(8行)，一个汉字占两页
 525                    column-选列参数
 526                    number-汉字库Hzk[]中的第几汉字输出
 527          说    明：宋体、字号12时汉字对应的点阵为：宽x高=16x16,先行再列
 528          返回值  ：无
 529          *********************************************************************/
 530          void Display_HZ(uchar screen,uchar page,uchar column,uchar number)
 531          {
 532   1         int i; 
 533   1         SelectScreen(screen);
 534   1         column=column&0x3f;//0011 1111
 535   1         SetLine(page); //写第一页
 536   1         SetColumn(column); //控制列
 537   1         for(i=0;i<16;i++)  //控制16列的数据输出
 538   1         {
 539   2            WriteByte(Hzk[i+32*number]);
 540   2         } //i+32*number汉字的前16个数据输出
 541   1         SetLine(page+1);    //写第二页
 542   1         SetColumn(column);    //控制列
 543   1         for(i=0;i<16;i++)    //控制16列的数据输出
 544   1         {
 545   2            WriteByte(Hzk[i+32*number+16]);
 546   2         }//i+32*number+16汉字的后16个数据输出
 547   1      } 
 548          /********************************************************************
 549          函数名称：Display_ZM
 550          功    能：显示字母
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 10  

 551          参    数：screen-选择屏幕: 0-全屏,1-左屏,2-右屏
 552                    page-选页参数，每次写一页(8行)，一个字母占两页
 553                    column-选列参数
 554                    number-字母库Zmk[]中的第几字母输出
 555          说    明：宋体、字号12时字母对应的点阵为：宽x高=8x16
 556          返回值  ：无
 557          *********************************************************************/
 558          void Display_ZM(uchar screen,uchar page,uchar column,uchar number)
 559          {
 560   1         int i; 
 561   1         SelectScreen(screen);
 562   1         column=column&0x3f;//0011 1111
 563   1         SetLine(page); //写上半页
 564   1         SetColumn(column); //控制列
 565   1         for(i=0;i<8;i++)  //控制8列的数据输出
 566   1         {
 567   2            WriteByte(Zmk[i+16*number]);
 568   2         } //i+16*number的前8个数据输出
 569   1         SetLine(page+1);    //写下半页
 570   1         SetColumn(column);    //控制列
 571   1         for(i=0;i<8;i++)   //控制8列的数据输出
 572   1         {
 573   2            WriteByte(Zmk[i+16*number+8]);
 574   2         }//i+16*number+8字母的后8个数据输出
 575   1      }
 576          /********************************************************************
 577          函数名称：DisplaySZ
 578          功    能：显示数字
 579          参    数：screen-选择屏幕: 0-全屏,1-左屏,2-右屏
 580                    page-选页参数，每次写一页(8行)，一个数字占两页
 581                    column-选列参数
 582                    number-数字库Szk[]中的第几数字输出
 583          说    明：宋体、字号12时数字对应的点阵为：宽x高=8x16
 584          返回值  ：无
 585          *********************************************************************/
 586          void Display_SZ(uchar screen,uchar page,uchar column,uchar number)
 587          {
 588   1         int i; 
 589   1         SelectScreen(screen);
 590   1         column=column&0x3f;//0011 1111
 591   1         SetLine(page); //写上半页
 592   1         SetColumn(column); //控制列
 593   1         for(i=0;i<8;i++)  //控制8列的数据输出
 594   1         {
 595   2            WriteByte(Szk[i+16*number]);
 596   2         } //i+16*number的前8个数据输出
 597   1         SetLine(page+1);    //写下半页
 598   1         SetColumn(column);    //控制列
 599   1         for(i=0;i<8;i++)   //控制8列的数据输出
 600   1         {
 601   2            WriteByte(Szk[i+16*number+8]);
 602   2         }//i+16*number+8数字的后8个数据输出
 603   1      }
 604          /********************************************************************
 605          函数名称：DisplayFH
 606          功    能：显示符号
 607          参    数：screen-选择屏幕: 0-全屏,1-左屏,2-右屏
 608                    page-选页参数，每次写一页(8行)，一个符号占两页
 609                    column-选列参数
 610                    number-符号库Fhk[]中的第几符号输出
 611          说    明：宋体、字号12时符号对应的点阵为：宽x高=8x16
 612          返回值  ：无
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 11  

 613          *********************************************************************/
 614          void Display_FH(uchar screen,uchar page,uchar column,uchar number)
 615          {
 616   1         int i; 
 617   1         SelectScreen(screen);
 618   1         column=column&0x3f;//0011 1111
 619   1         SetLine(page); //写上半页
 620   1         SetColumn(column); //控制列
 621   1         for(i=0;i<8;i++)  //控制8列的数据输出
 622   1         {
 623   2            WriteByte(Fhk[i+16*number]);
 624   2         } //i+16*number的前8个数据输出
 625   1         SetLine(page+1);    //写下半页
 626   1         SetColumn(column);    //控制列
 627   1         for(i=0;i<8;i++)   //控制8列的数据输出
 628   1         {
 629   2            WriteByte(Fhk[i+16*number+8]);
 630   2         }//i+16*number+8符号的后8个数据输出
 631   1      }
 632          
 633          void Display_string(uchar page,uchar column,uchar *string)     //字符串显示
 634          {
 635   1        char i=0,screen=1;
 636   1        while(string[i] != '\0')
 637   1          {
 638   2            if(i+column>7)screen = 2;
 639   2            
 640   2            if(string[i] >= 'A' && string[i] <= 'Z')
 641   2            {
 642   3                Display_ZM(screen,page*2,(i+column)*8%64,string[i]-'A');
 643   3            }
 644   2            else if(string[i] >= 'a' && string[i] <= 'z')
 645   2            {
 646   3                Display_ZM(screen,page*2,(i+column)*8%64,string[i]-'a'+26);     
 647   3            }
 648   2            else if(string[i] >= '0' && string[i] <= '9')
 649   2            {
 650   3                Display_SZ(screen,page*2,(i+column)*8%64,string[i]-'0');      
 651   3            }
 652   2            else if(string[i] == ' ')
 653   2            {
 654   3                Display_FH(screen,page*2,(i+column)*8%64,0);      
 655   3            }     
 656   2            i++;
 657   2          }
 658   1      }
 659          
 660          /********************************************************************
 661          函数名称：ReadByte
 662          功    能：读数据，RW=0写数据，RW=1读数据，列地址自动加1
 663          参    数：dat：按字节读数据
 664          返回值  ：无
 665          *********************************************************************/
 666          void ReadByte(uchar column,uchar page,uchar *dat) 
 667          {
 668   1         uchar screen=1;
 669   1         CheckState();//状态检查
 670   1        
 671   1         if(column>64)screen=2;
 672   1         SelectScreen(screen);
 673   1      
 674   1         SetLine((int)(page/8));  //写行
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 12  

 675   1         SetColumn(column%64); //控制列
 676   1        
 677   1         DATA=0xff;
 678   1         RS=1; 
 679   1         RW=1;
 680   1         EN=1; //EN下降沿
 681   1         _nop_();
 682   1         EN=0;
 683   1         EN=1; //EN下降沿
 684   1         _nop_();
 685   1         *dat = DATA;
 686   1         EN=0;
 687   1      
 688   1      }
 689          
 690          void Display_pixel(uchar column,uchar page,uchar color)    //显示一个像素
 691          {
 692   1          uchar screen=1;
 693   1          uchar dat;
 694   1          if(column>64)screen=2;
 695   1         SelectScreen(screen);
 696   1      
 697   1         ReadByte(column,page,&dat);
 698   1        
 699   1         SetLine((int)(page/8));  //写行
 700   1         SetColumn(column%64); //控制列
 701   1         WriteByte(color ? (dat |= (0x01 << (page%8))) : (dat &= ~(0x01 << (page%8))));
 702   1        
 703   1      }
 704          
 705          void draw_line(unsigned int x0, unsigned int y0, unsigned int x1, unsigned int y1,unsigned color) {
 706   1          // Bresenham算法实现线段绘制，具体实现可参考
 707   1          // https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm
 708   1          int dx = abs(x1 - x0);
 709   1          int dy = abs(y1 - y0);
 710   1          int sx = (x0 < x1) ? 1 : -1;
 711   1          int sy = (y0 < y1) ? 1 : -1;
 712   1          int err = dx - dy;
 713   1          int e2;
 714   1          while (1) {
 715   2              Display_pixel(x0, y0,color);
 716   2              if (x0 == x1 && y0 == y1) break;
 717   2              e2 = 2 * err;
 718   2              if (e2 > -dy) {
 719   3                  err -= dy;
 720   3                  x0 += sx;
 721   3              }
 722   2              if (e2 < dx) {
 723   3                  err += dx;
 724   3                  y0 += sy;
 725   3              }
 726   2          }
 727   1      }
 728          
 729          /********************************************************************
 730          函数名称：Display_6x8
 731          功    能：显示8x8字母
 732          参    数：screen-选择屏幕: 0-全屏,1-左屏,2-右屏
 733                    page-选页参数，每次写一页(8行)
 734                    column-选列参数
 735                    number-字母库8x8Zmk[]中的第几字母输出
 736          说    明：宋体、字号12时字母对应的点阵为：宽x高=6x8
C51 COMPILER V9.60.7.0   12864                                                             05/06/2023 17:23:44 PAGE 13  

 737          返回值  ：无
 738          *********************************************************************/
 739          void Display_6x8(uchar page,uchar column,uchar number)
 740          {
 741   1         int i; 
 742   1         uchar screen=1;
 743   1         if(column>=64)screen=2;
 744   1         SelectScreen(screen);
 745   1         column=column&0x3f;//0011 1111
 746   1         SetLine(page); //写上半页
 747   1         SetColumn(column); //控制列
 748   1         for(i=0;i<6;i++)  //控制6列的数据输出
 749   1         {
 750   2            WriteByte(Zmk_6x8[i+6*number]);
 751   2         }
 752   1      }
 753          
 754          void Display_1x8(uchar page,uchar column,uchar byte)
 755          {
 756   1         uchar screen=1;
 757   1         if(column>=64)screen=2;
 758   1         SelectScreen(screen);
 759   1         column=column&0x3f;//0011 1111
 760   1         SetLine(page); //写上半页
 761   1         SetColumn(column); //控制列
 762   1      
 763   1         WriteByte(byte);
 764   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1393    ----
   CONSTANT SIZE    =   1356    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      49
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
